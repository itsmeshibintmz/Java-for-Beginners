1.Java program to accept a number and then to find the reverse of the number and sum of its digits.
-------------------------------------------------------------------------------------------------------

public class RevSumTest {
    public static void main(String[] args) {
        int number = Integer.parseInt(args[0]);
        RevSum rev = new RevSum(number);
        rev.calculateReverse();
        rev.calculateSumOfDigits();
    }
}

class RevSum {
    int reverse =0 ,numberToFind,sumOfDigit,numberToFindSum;
    RevSum(int numberToRev) {
        numberToFind = numberToRev;
        numberToFindSum = numberToRev;
    }
    void calculateReverse() {
        while(numberToFind!=0) {
            int digit = numberToFind % 10;
            reverse = reverse * 10 + digit;
            numberToFind /= 10;
        }
        System.out.println("Reversed Number: " + reverse);
    }
    void calculateSumOfDigits() {
        while(numberToFindSum > 0)
        {
            int numbers = numberToFindSum % 10;
            sumOfDigit = sumOfDigit + numbers;
            numberToFindSum = numberToFindSum / 10;
        }
        System.out.println("Sum of Digits:"+sumOfDigit);
    }
}



2.Java program to read an array of n elements and then to sort it.
---------------------------------------------------------------------

import java.util.Scanner;

public class ArraySortTest {
    public static void main(String[] args){
        int limit,temp=0;
        Scanner s = new Scanner(System.in);
        System.out.print("Enter the length of the Array:");
        limit = s.nextInt();
        int array[] = new int[limit];
        System.out.println("Enter the elements:");
        for (int i = 0; i < limit; i++) {
            array[i] = s.nextInt();
        }
        for (int i = 0; i < limit; i++) {
            for (int j = i + 1; j < limit; j++) {
                if (array[i] > array[j])  {
                    temp = array[i];
                    array[i] = array[j];
                    array[j] = temp;
                }
            }
        }
        System.out.print("Array in Ascending Order:");
        for (int i = 0; i < limit - 1; i++) 
        {
            System.out.print(array[i] + " ");
        }
        System.out.print(array[limit - 1]);
    }
}



3.Java menu driven program to check weather a number is prime or not, palindrome or not, and Armstrong or not.
-----------------------------------------------------------------------------------------------------------------

import java.util.Scanner;

public class PrimePaliAmstr {
    public static void main(String[] args){
        char choice;
        Scanner input = new Scanner(System.in);
        System.out.println("Enter p for Prime.");
        System.out.println("Enter q for Palindrome.");
        System.out.println("Enter a for Amstrong.");
        String s = input.next();
        choice = s.charAt(0);

        switch(choice) {

        case 'p':
            boolean isPrime=true;
            Scanner scan= new Scanner(System.in);
            System.out.println("Enter any number:");
            int numberToCheck=scan.nextInt();
            scan.close();
            for(int i=2;i<=numberToCheck/2;i++) {
                int temp = numberToCheck%i;
                if(temp==0) {
                    isPrime=false;
                    break;
                }
            }
            if(isPrime){
                System.out.println(numberToCheck + " is a Prime Number");
            } else {
                System.out.println(numberToCheck + " is not a Prime Number");
            }   

        case 'q':
            Scanner scanTwo= new Scanner(System.in);
            System.out.println("Enter any number:");
            int numberToCheckPal=scanTwo.nextInt();
            scanTwo.close();  
            int reversedInteger = 0, remainder, originalInteger;
            originalInteger = numberToCheckPal;
            while( numberToCheckPal != 0 ) {
                remainder = numberToCheckPal % 10;
                reversedInteger = reversedInteger * 10 + remainder;
                numberToCheckPal  /= 10;
            }
            if (originalInteger == reversedInteger) {
                System.out.println(originalInteger + " is a palindrome.");
            } else {
                System.out.println(originalInteger + " is not a palindrome.");
            }
            
        case 'a':
            Scanner scanThree= new Scanner(System.in);
            System.out.println("Enter any number:");
            int numberToCheckAmstr=scanThree.nextInt();
            scanThree.close();  
            int amsOriginalNumber, amsRemainder, amsResult = 0;
            amsOriginalNumber = numberToCheckAmstr;
            while (amsOriginalNumber != 0)
            {
                amsRemainder = amsOriginalNumber % 10;
                amsResult += Math.pow(amsRemainder, 3);
                amsOriginalNumber /= 10;
            }
            if(amsResult == numberToCheckAmstr) {
                System.out.println(numberToCheckAmstr + " is an Armstrong number.");
            } else {
                System.out.println(numberToCheckAmstr + " is not an Armstrong number.");
            }
        }
    }
}



4.Java program to print the prime numbers up to a limit and Fibonacci series up to a limit.
----------------------------------------------------------------------------------------------

public class PrimeFibonocciLimitTest {
    public static void main(String args[]) { 
        int limit = Integer.parseInt(args[0]);
        Fibonocci fib = new Fibonocci(limit);
        Prime pri = new Prime(limit);
        fib.findFibonocci();
        pri.findPrime();
    } 
} 

class Fibonocci {
    int fibonocciLimit;
    Fibonocci(int limitFibonocci) {
        fibonocciLimit = limitFibonocci;
    }
    void findFibonocci () {
        int term1 = 0, term2 = 1;
        System.out.print("First " + fibonocciLimit + " Fibonocci terms: ");
        for (int i = 1; i <= fibonocciLimit; ++i) {
            System.out.print(term1 + "  ");
            int sum = term1 + term2;
            term1 = term2;
            term2 = sum;
        }
    }
}

class Prime {
    int numberPrimeLimit;
    Prime(int primeLimit) {
        numberPrimeLimit = primeLimit;
    }
    void findPrime() {
        String  primeNumbers = "";
        for (int i = 1; i <= numberPrimeLimit; i++) { 		  	  
            int counter=0; 	  
            for(int number =i; number>=1; number--){
                if(i%number==0) {
                    counter = counter + 1;
                }
            }
            if (counter ==2) {
                primeNumbers = primeNumbers + i + " ";
            }	
        }	
        System.out.println();
        System.out.println();
        System.out.println("Prime numbers from 1 to "+numberPrimeLimit+" are :");
        System.out.println(primeNumbers);
    }
}
 
 

5.Java program to implement matrix addition.
------------------------------------------------

import java.util.Scanner;
class AddMatrix{
    public static void main(String args[]) {
        int row, coloumn,i,j;
        Scanner in = new Scanner(System.in);
        
        System.out.println("Enter the number of rows");
        row = in.nextInt();
        
        System.out.println("Enter the number columns");
        coloumn = in.nextInt();
        
        int matrixOne[][] = new int[row][coloumn];
        int matrixTwo[][] = new int[row][coloumn];
        int resultMatrix[][] = new int[row][coloumn];
        
        System.out.println("Enter the elements of matrix1");
        
        for ( i= 0 ; i < row ; i++ ) { 
        
            for ( j= 0 ; j < coloumn ;j++ ) {
                matrixOne[i][j] = in.nextInt();
        }
        System.out.println();
        }

        System.out.println("Enter the elements of matrix2");
        
        for ( i= 0 ; i < row ; i++ ) {
        
            for ( j= 0 ; j < coloumn ;j++ ) {
                matrixTwo[i][j] = in.nextInt();
            }
        System.out.println();
        }
        
        for ( i= 0 ; i < row ; i++ ) {
            for ( j= 0 ; j < coloumn ;j++ ) {
                resultMatrix[i][j] = matrixOne[i][j] + matrixTwo[i][j] ; 
            }
        }
        System.out.println("Sum of Matrices:");

        for ( i= 0 ; i < row ; i++ ) { 
            for ( j= 0 ; j < coloumn ;j++ ){
                System.out.print(resultMatrix[i][j]+"\t");
            }
        System.out.println();
        }             
    }
}



6.Java program to multiply two matrices.
-------------------------------------------

import java.util.Scanner;

public class MatrixMultiplication {
    public static void main(String args[]) {
        int row1, row2,coloumn1,coloumn2,i,j,k,sum;
        Scanner in = new Scanner(System.in);
        
        System.out.println("Enter the number of rows of Matrix 1");
        row1 = in.nextInt();
        
        System.out.println("Enter the number columns of Matrix 1");
        coloumn1 = in.nextInt();
        System.out.println("Enter the number of rows of Matrix 2");
        row2 = in.nextInt();
        
        System.out.println("Enter the number of columns of Matrix 2");
        coloumn2 = in.nextInt();
        
        if(coloumn1==row2)
        {
        
        int matrix1[][] = new int[row1][coloumn1]; 
        int matrix2[][] = new int[row2][coloumn2]; 
        int resultMatrix[][] = new int[row1][coloumn2];
        
        System.out.println("Enter the elements of Matrix 1");
        
        for ( i= 0 ; i < row1 ; i++ ) { 
            for ( j= 0 ; j < coloumn1 ;j++ ) {
                matrix1[i][j] = in.nextInt();
            }
        }
        System.out.println("Enter the elements of Matrix 2");
        
        for ( i= 0 ; i < row2 ; i++ ) { 
            for ( j= 0 ; j < coloumn2 ;j++ ) {
                matrix2[i][j] = in.nextInt();
            }
        }
        
        System.out.println();
        System.out.println("Result Matrix is");
        for ( i= 0 ; i < row1 ; i++ ) { 
            for ( j= 0 ; j <coloumn2;j++) {
                sum=0;
                for ( k= 0 ; k <row2;k++ ) {
                    sum +=matrix1[i][k]*matrix2[k][j] ;
                }
        resultMatrix[i][j]=sum;
            }
        }
        for ( i= 0 ; i < row1; i++ ) {
            for ( j=0 ; j < coloumn2;j++ ) {
                System.out.print(resultMatrix[i][j]+" ");
            }    
        System.out.println();
        }
        }
        else {
        System.out.print("Error 404:Multiplication not found");
        System.out.println();
        System.out.println("Enter correct Values");
        }   
    }
}



7.Java program to read n strings then to sort them and display the palindromes among them.
---------------------------------------------------------------------------------------------

import java.util.Scanner;

public class StringPalindrome {
    public static void main(String[] args) {
        Scanner reader = new Scanner(System.in);
        System.out.println("Enter the number of words you would like to enter");
        int numberOfWords = reader.nextInt();
        String words[] = new String[numberOfWords];
        reader.nextLine();
        System.out.println("Enter the words");
 
        for(int i = 0; i < numberOfWords; i++){
            words[i] = reader.nextLine();
        }
        reader.close();

       String sortedWords[] = sorter(words);
       stringPrinter(sortedWords);
       palindromeCheck(sortedWords);
       
    }

    static String[] sorter(String[] words) {
        int n = words.length;
        for(int i = 0; i < n-1; i++) {  
            for (int j = i+1; j < n; j++){  

                if(words[i].compareTo(words[j])>0){  
                
                String temp = words[i];  
                words[i] = words[j];  
                words[j] = temp;  
                }  
            }  
        }
        return words;
    }

    static void palindromeCheck(String[] words){
        for(int i = 0; i < words.length; i++){
            String rev = "";
            for(int j = words[i].length()-1; j >= 0; j--){
                rev += words[i].charAt(j);
            }
            if(words[i].equals(rev)){
                System.out.println(rev + " is a palindrome");
            }
        }
    }

    static void stringPrinter(String[] words){
        for(int i =0 ; i < words.length;i++){
            System.out.println(words[i]);
        }
    }
}



8.Java program to Implement string handling functions.
--------------------------------------

public class StringHandling {
    public static void main(String args[]){ 
        //String Handling Functions
        //Function 1: String Length
        String s1="Hello"; 
        String s2="Welcome To Java"; 
        System.out.println("Length of String "+s1+" is: "+s1.length());  
        System.out.println("Length of String "+s2+" is: "+s2.length()); 

        //Function 2: String compare
        String s3="hello";
        String s4="hello"; 
        String s5="hemlo"; 
        String s6="flag";

        //This program shows the comparison between the various string. It is noticed that  
        //if s1 > s2, it returns a positive number  
        //if s1 < s2, it returns a negative number 
        //if s1 == s2, it returns 0

        System.out.println();
        System.out.println("Compare Results");
        System.out.println("----------------");
        System.out.println("Here if 1st string is greater than 2nd, the result will be a +ve number");
        System.out.println("If 1st string is lower than 2nd, the result will be -ve number, if both strings are equal, the result will be zero");
        System.out.println("Results are:");
        System.out.println("String 1 compared to String 2: "+s3.compareTo(s4)); 
        System.out.println("string 1 compared to String 3: " +s3.compareTo(s5)); 
        System.out.println("String 1 compared to String 4: " +s3.compareTo(s6)); 

        //Function 3: String concatenation
        System.out.println();
        System.out.println("String Concatenation");
        System.out.println("--------------------");
        String s7="Hello";
        s7=s7.concat(" How are you");
        System.out.println(s7);

        //Function 4: String is Empty or not
        String s8=""; 
        String s9="hello"; 
        System.out.println();
        System.out.println("String is Empty or not");
        System.out.println("----------------------");
        System.out.println("String 1: "+s8.isEmpty());      
        System.out.println("String 2: "+s9.isEmpty());     
        
        //Function 5: String toLowerCase
        System.out.println();
        System.out.println("String to lower Case");
        System.out.println("--------------------");
        String s10="HELLO HOW Are You";
        String s10Lower=s10.toLowerCase();
        System.out.println(s10Lower);

        //Function 6: String toupper Case
        System.out.println();
        System.out.println("String to Upper case");
        System.out.println("--------------------");
        String s11="hello how are you";  
        String s11upper=s11.toUpperCase();  
        System.out.println(s11upper);  
    }       
}



9.Java program to implement binary search.
-----------------------------------------------

class BinarySearch{  
    public static void binarySearch(int arr[], int first, int last, int key){  
      int mid = (first + last)/2;  
      while( first <= last ){  
         if ( arr[mid] < key ){  
           first = mid + 1;     
         }else if ( arr[mid] == key ){  
           System.out.println("Element is found at index: " + mid);  
           break;  
         }else{  
            last = mid - 1;  
         }  
         mid = (first + last)/2;  
      }  
      if ( first > last ){  
         System.out.println("Element is not found!");  
      }  
   }  
    public static void main(String args[]){  
           int arr[] = {10,20,30,40,50};  
           int key = 30;  
           int last=arr.length-1;  
           binarySearch(arr,0,last,key);     
    }  
}  


10.Java program to print the series
--------------------------------------

P
Pr
Pro
Prog
Progr…

public class PrintSeries {
    public static void main(String[] args) {
        char word[] = new char[]{'P','r','o','g','r','a','m'};
        for(int i = 0; i < word.length; i++){
            for(int j = 0; j <= i; j++){
                System.out.print(word[j]);
            }
            System.out.println("");
        }
    }
}

